"use client";
import { useEffect, useState } from 'react'; type Node={conceptId:string;fsn?:{term?:string};pt?:{term?:string};active?:boolean};
export default function TaxonomyModal({open,conceptId,onClose}:{open:boolean;conceptId?:string;onClose:()=>void}){ const [focus,setFocus]=useState(conceptId); const [data,setData]=useState<any>(null); useEffect(()=>{ setFocus(conceptId); },[conceptId]); useEffect(()=>{ if(!open||!focus) return; setData(null); fetch(`/api/snomed/taxonomy?id=${encodeURIComponent(focus)}`,{cache:'no-store'}).then(r=>r.json()).then(setData); },[open,focus]); if(!open) return null; const dbl=(id:string)=>setFocus(id); return(<div className='fixed inset-0 z-50 bg-black/40 flex items-center justify-center'><div className='bg-white w-[min(100%,900px)] rounded-xl shadow-lg overflow-hidden'><div className='px-4 py-3 border-b flex items-center justify-between'><div className='font-semibold'>SNOMED Taxonomy (Inferred)</div><button className='border rounded px-3 py-1' onClick={onClose}>Close</button></div><div className='p-4 overflow-auto max-h-[80vh]'>{!data&&<div className='text-sm text-gray-500'>Loadingâ€¦</div>}{data&&(<div className='space-y-4'><div><div className='text-xs uppercase text-gray-500 mb-1'>Parents</div><ul className='space-y-1'>{(data.parents||[]).map((p:Node)=>(<li key={p.conceptId}><div onDoubleClick={()=>dbl(p.conceptId)} className='cursor-zoom-in hover:underline'>{p.conceptId} | {p.fsn?.term||p.pt?.term||''}<ul className='ml-5'><li className='text-sm font-medium'>{data.focus?.conceptId} | {data.focus?.fsn?.term||data.focus?.pt?.term||''}</li></ul></div></li>))}</ul></div><div><div className='text-xs uppercase text-gray-500 mb-1'>Children</div><ul className='space-y-1'>{(data.children||[]).map((c:Node)=>(<li key={c.conceptId}><div onDoubleClick={()=>dbl(c.conceptId)} className='cursor-zoom-in hover:underline'>{c.conceptId} | {c.fsn?.term||c.pt?.term||''}</div></li>))}</ul></div></div>)}</div></div></div>); }
